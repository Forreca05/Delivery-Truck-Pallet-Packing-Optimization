digraph "integerLinearProgramming"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="integerLinearProgramming",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Solves 0/1 knapsack via branch-and-bound (ILP approach)."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="branchAndBoundSearch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$algorithms_8cpp.html#a7ac01eab15213e13dcc7eb39e3484cdf",tooltip="Branch-and-bound search with profit/weight optimization."];
  Node2 -> Node2 [id="edge2_Node000002_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node3 [id="edge3_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="lpBound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$algorithms_8cpp.html#a4acdc1fec2e9636ae1bcc52b2e95f5b1",tooltip="Computes upper bound via fractional knapsack relaxation."];
}
